services:
  # Vector Database for RAG
  qdrant:
    image: qdrant/qdrant:latest
    container_name: weather_qdrant
    ports:
      - "6333:6333"  # HTTP API
      - "6334:6334"  # gRPC API
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT__LOG_LEVEL=INFO
    restart: unless-stopped

  # Backend API
  weather-backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: weather_backend
    ports:
      - "8000:8000"
    environment:
      - QDRANT_URL=http://qdrant:6333
      - TZ=Asia/Manila
    env_file:
      - ./backend/.env
    depends_on:
      - qdrant
    restart: unless-stopped

  # Frontend (when ready)
  # weather-frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   container_name: weather_frontend
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - weather-backend
  #   restart: unless-stopped

volumes:
  qdrant_data:
    driver: local

networks:
  default:
    name: weather_network